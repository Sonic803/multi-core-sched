[General]
network = Computer
sim-time-limit = 1000s
#cpu-time-limit = 0.2s
**.vector-recording = true
seed-set = ${repetition}
num-rngs = 3
**.processGenerator.rng-0 = 0
**.processGenerator.rng-1 = 1
**.processGenerator.rng-2 = 2
repeat = 1

[Default]
**.processGenerator.IOPercentageCPUbound = 0.2
**.processGenerator.IOPercentageIObound = 0.8

[Degeneracy]
extends = Default
**.numCpus = ${numCpus = 0, 1, 100}
**.processGenerator.pCpuBound = ${pCpuBound = 0, 1}
**.processGenerator.meanGenerationTime = ${meanGenerationTime = 10e3ms, 10e-3ms}
**.processGenerator.meanProcessDuration = ${meanProcessDuration = 10e-3ms, 10e3ms ! meanGenerationTime}
**.scheduler.isFCFS = ${isFCFS = true, false}
**.processGenerator.generationType = ${generationType = "exponential", "uniform"}
**.processGenerator.durationType = ${durationType = "exponential", "uniform"}

[Consistency_same_u]
extends = Default
**.scheduler.isFCFS = ${isFCFS = true, false}
**.processGenerator.generationType = ${generationType = "exponential", "uniform"}
**.processGenerator.durationType = ${durationType = "exponential", "uniform" ! generationType}
**.numCpus = 6
**.processGenerator.pCpuBound = 0.5
**.processGenerator.meanGenerationTime = ${meanGenerationTime = 1ms, 4ms, 10ms}
**.processGenerator.meanProcessDuration = ${meanProcessDuration = 10ms, 40ms, 100ms ! meanGenerationTime}

[Consistency_same_rho]
extends = Default
**.scheduler.isFCFS = ${isFCFS = true, false}
**.processGenerator.generationType = ${generationType = "exponential", "uniform"}
**.processGenerator.durationType = ${durationType = "exponential", "uniform" ! generationType}
**.numCpus = ${numCpus = 3, 6, 9}
**.processGenerator.pCpuBound = 0.5
**.processGenerator.meanGenerationTime = ${meanGenerationTime = 1ms, 4ms, 10ms ! numCpus}
**.processGenerator.meanProcessDuration = ${meanProcessDuration = 5ms, 40ms, 150ms ! numCpus}

[Consistency_same_rho_unstable]
extends = Default
**.scheduler.isFCFS = ${isFCFS = true, false}
**.processGenerator.generationType = ${generationType = "exponential", "uniform"}
**.processGenerator.durationType = ${durationType = "exponential", "uniform" ! generationType}
**.numCpus = ${numCpus = 1, 2, 3}
**.processGenerator.pCpuBound = 0.5
**.processGenerator.meanGenerationTime = ${meanGenerationTime = 1ms, 4ms, 10ms ! numCpus}
**.processGenerator.meanProcessDuration = ${meanProcessDuration = 5ms, 40ms, 150ms ! numCpus}

[Continuity]
extends = Default
**.scheduler.isFCFS = ${isFCFS = true, false}
**.numCpus = ${numCpus = 19,20,21}
**.processGenerator.pCpuBound = ${pCpuBound = 0.475, 0.5, 0.525 ! numCpus}
**.processGenerator.meanGenerationTime = ${meanGenerationTime = 1.425ms, 1.5ms, 1.575ms ! numCpus}
**.processGenerator.meanProcessDuration = ${meanProcessDuration = 47.5ms, 50ms, 52.5ms ! numCpus}
**.processGenerator.generationType = "exponential"
**.processGenerator.durationType = "exponential"
**.turnaroundTime.result-recording-modes = all
**.numBusyCpus.result-recording-modes = all

[TestIid]
extends = Default
warmup-period = 200s
repeat = 1
# Only these combinations
**.processGenerator.pCpuBound = ${pCpuBound = 0.9}
**.processGenerator.meanGenerationTime = ${meanProcessDuration} * ( 0.8 * ${pCpuBound} + ( 1 - ${pCpuBound} ) * 0.2) / ( ${rho = 0.4, 0.5} * ${numCpus} )
**.processGenerator.meanProcessDuration = ${meanProcessDuration = 100ms}
**.numCpus = ${numCpus = 4}
# Calculate meanProcessDuration
# Only both exponential or both uniform
**.processGenerator.generationType = ${generationType = "exponential"}
**.processGenerator.durationType = ${durationType = "exponential"}
# All combinations with the others
**.scheduler.isFCFS = ${isFCFS = true,false}
# **.result-recording-modes = all
#**.turnaroundTime.result-recording-modes = all
**.turnaroundTime.result-recording-modes = +vector

[StatAnalysis]
extends = Default
warmup-period = 200s
repeat = 1
# Only these combinations
**.processGenerator.pCpuBound = ${pCpuBound = 0.1, 0.9}
**.processGenerator.meanGenerationTime = ${meanProcessDuration} * ( 0.8 * ${pCpuBound} + ( 1 - ${pCpuBound} ) * 0.2) / ( ${rho = 0.5, 0.9} * ${numCpus} )
**.processGenerator.meanProcessDuration = ${meanProcessDuration = 100ms}
**.numCpus = ${numCpus = 4, 12}
# Calculate meanProcessDuration
**.processGenerator.generationType = ${generationType = "exponential"}
**.processGenerator.durationType = ${durationType = "exponential"}
# All combinations with the others
**.scheduler.isFCFS = ${isFCFS = true,false}
# **.result-recording-modes = all
#**.turnaroundTime.result-recording-modes = all
**.turnaroundTime.result-recording-modes = +vector
**.waitedReadyTime.result-recording-modes = +vector
**.numBusyCpus.result-recording-modes = +vector
**.numProcReady.result-recording-modes = +vector

[Saturation]

extends = Default
repeat = 1
warmup-period = 0s
# Only these combinations
**.processGenerator.pCpuBound = ${pCpuBound = 0.9}
**.processGenerator.meanGenerationTime = ${meanProcessDuration} * ( 0.8 * ${pCpuBound} + ( 1 - ${pCpuBound} ) * 0.2) / ( ${rho = 0.9,1.1} * ${numCpus} )
**.processGenerator.meanProcessDuration = ${meanProcessDuration = 100ms}
**.numCpus = ${numCpus = 4}
**.processGenerator.generationType = ${generationType = "exponential"}
**.processGenerator.durationType = ${durationType = "exponential"}
# All combinations with the others
**.scheduler.isFCFS = ${isFCFS = true}
# **.result-recording-modes = all
#**.turnaroundTime.result-recording-modes = all
**.turnaroundTime.result-recording-modes = +vector
